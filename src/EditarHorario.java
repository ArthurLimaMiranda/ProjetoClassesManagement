import au.com.bytecode.opencsv.CSVReader;
import java.io.File;
import javax.swing.JFileChooser;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import java.awt.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.table.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JULIA TUDE E ATUM LIMA
 */
public class EditarHorario extends javax.swing.JInternalFrame {
int cont = 0;   
int x=0;
int i=100;
String Arquivo;
    /**
     * Creates new form TelaGrade
     */
    public EditarHorario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //Cria Layout básico padrão
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Matérias = new javax.swing.JComboBox<String>();
        macarrone = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable17 = new javax.swing.JTable();
        jTextField7 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        EditarArquivoCSV = new javax.swing.JMenuItem();
        SalvarHorário = new javax.swing.JMenuItem();

        Matérias.setMaximumRowCount(6);
        Matérias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ciência e Tecnologia Eletrônica", "Eletricidade Básica para Eletrônica", "Práticas de Eletro-eletrônica", "Circuitos Elétricos para Eletrônica", "Eletrônica Básica I", "Eletrônica Básica II", "Técnicas Digitais I", "Eletrônica Básica III", "Técnicas Digitais II", "Acionamentos Eletroeletrônicos", "Eletrônica de Potência", "Fundamentos da Programação", "Fundamentos de Organização da Manutenção", "Sistemas Microprocessados", "Controle e Instrumentação Industrial", "Dispositivos Controladores Lógicos", "Eletropneumática", "Microcontroladores", "Protótipos de Sistemas Eletrônicos", "Sistemas de Rádio Transmissão", "Supervisão e Comunicação Industrial" }));

        setClosable(true);
        setMaximizable(true);

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"07:00-07:45"},
                {"07:45-08:30"},
                {"08:30-09:15"},
                {"09:35-10:20"},
                {"10:20-11:05"},
                {"11:05-11:50"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        jScrollPane10.setViewportView(jTable10);
        if (jTable10.getColumnModel().getColumnCount() > 0) {
            jTable10.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("MANHÃ");

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.getTableHeader().setReorderingAllowed(false);
        jScrollPane11.setViewportView(jTable11);
        if (jTable11.getColumnModel().getColumnCount() > 0) {
            jTable11.getColumnModel().getColumn(0).setResizable(false);
            jTable11.getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable11.getColumnModel().getColumn(1).setResizable(false);
            jTable11.getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable11.getColumnModel().getColumn(2).setResizable(false);
            jTable11.getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable11.getColumnModel().getColumn(3).setResizable(false);
            jTable11.getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable11.getColumnModel().getColumn(4).setResizable(false);
            jTable11.getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable11.getColumnModel().getColumn(5).setResizable(false);
            jTable11.getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ));
        jScrollPane12.setViewportView(jTable12);
        if (jTable12.getColumnModel().getColumnCount() > 0) {
            jTable12.getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable12.getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable12.getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable12.getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable12.getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable12.getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12:50-13:35"},
                {"13:35-14:20"},
                {"14:20-15:05"},
                {"15:25-16:10"},
                {"16:10-16:55"},
                {"16:55-17:40"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        jScrollPane13.setViewportView(jTable13);
        if (jTable13.getColumnModel().getColumnCount() > 0) {
            jTable13.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("TARDE");

        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"18:30-19:15"},
                {"19:15-20:00"},
                {"20:00-20:45"},
                {"20:45-21:30"},
                {"21:30-22:15"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        jScrollPane15.setViewportView(jTable15);
        if (jTable15.getColumnModel().getColumnCount() > 0) {
            jTable15.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("NOITE");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Professor:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Endereço:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("CEP:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Telefone:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("E-MAIL");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Regime TRAB:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Disciplinas:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Nº SIAPE:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Aulas:");

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("SEM/ANO:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Outras:");

        jTable16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Verde", "Preferência"},
                {"Amarelo", "Disponível"},
                {"Vermelho", "Não disponível"}
            },
            new String [] {
                "DISPONIBILIDADE", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(jTable16);
        if (jTable16.getColumnModel().getColumnCount() > 0) {
            jTable16.getColumnModel().getColumn(0).setResizable(false);
            jTable16.getColumnModel().getColumn(1).setResizable(false);
        }

        jTable17.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ));
        jScrollPane17.setViewportView(jTable17);
        if (jTable17.getColumnModel().getColumnCount() > 0) {
            jTable17.getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable17.getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable17.getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable17.getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable17.getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            jTable17.getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField11))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane16)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(1068, Short.MAX_VALUE))
                            .addComponent(jScrollPane12)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(1068, Short.MAX_VALUE))
                            .addComponent(jScrollPane11)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane17)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        macarrone.addTab("Principal", jPanel1);

        File.setText("File");
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        EditarArquivoCSV.setText("EditarHorárioProf");
        EditarArquivoCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarArquivoCSVActionPerformed(evt);
            }
        });
        File.add(EditarArquivoCSV);

        SalvarHorário.setText("SalvarHorárioProf");
        SalvarHorário.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarHorárioActionPerformed(evt);
            }
        });
        File.add(SalvarHorário);

        jMenuBar1.add(File);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(macarrone)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(macarrone)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
   // TODO add your handling code here:
    }//GEN-LAST:event_FileActionPerformed

    private void EditarArquivoCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarArquivoCSVActionPerformed
        //Puxa método para ler csv
        
        try {
        portinha();
    } catch (Exception ex) {
        Logger.getLogger(GerarHorario.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EditarArquivoCSVActionPerformed

    private void SalvarHorárioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarHorárioActionPerformed
        //Puxa método para salvar horário
        
        try {
        leitor();
    } catch (Exception ex) {
        Logger.getLogger(GerarHorario.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_SalvarHorárioActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem EditarArquivoCSV;
    private javax.swing.JMenu File;
    private javax.swing.JComboBox<String> Matérias;
    private javax.swing.JMenuItem SalvarHorário;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable15;
    private javax.swing.JTable jTable16;
    private javax.swing.JTable jTable17;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTabbedPane macarrone;
    // End of variables declaration//GEN-END:variables
    public void leitor()throws Exception{
        //Criação de um arquivo separado por vírgulas com os dados de horário (Método salvar horário)
         char Sem;
       char Set;
       char Sen;
       char Tem;
       char Tet;
       char Ten;
       char Qam;
       char Qat;
       char Qan;
       char Qim;
       char Qit;
       char Qin;
       char Sxm;
       char Sxt;
       char Sxn;
       char Sam;
       char Sat;     
       
       CSVReader reador = new CSVReader(new FileReader(Arquivo), ',' , '"' , 1);
       java.util.List<String[]> lenada = reador.readAll();    
        
            
       if(lenada.get(2)[7].isEmpty()){
        Sem='p';
       }
       else{
        Sem=lenada.get(2)[7].charAt(0);
       }
       
       if(lenada.get(3)[7].isEmpty()){
        Set='p';
       }
       else{
        Set=lenada.get(3)[7].charAt(0);
       }
       
       if(lenada.get(4)[7].isEmpty()){
        Sen='p';
       }
       else{
        Sen=lenada.get(4)[7].charAt(0);;
       }
       
       if(lenada.get(5)[7].isEmpty()){
        Tem='p';
       }
       else{
        Tem=lenada.get(5)[7].charAt(0);
       }
       
       if(lenada.get(6)[7].isEmpty()){
        Tet='p';
       }
       else{
        Tet=lenada.get(6)[7].charAt(0);
       }

       if(lenada.get(7)[7].isEmpty()){
        Ten='p';
       }
       else{
        Ten=lenada.get(7)[7].charAt(0);
       }

       if(lenada.get(9)[7].isEmpty()){
        Qam='p';
       }
       else{
        Qam=lenada.get(9)[7].charAt(0);
       }
       
       if(lenada.get(10)[7].isEmpty()){
        Qat='p';
       }
       else{
        Qat=lenada.get(10)[7].charAt(0);
       }

       if(lenada.get(11)[7].isEmpty()){
        Qan='p';
       }
       else{
        Qan=lenada.get(11)[7].charAt(0);
       }

       if(lenada.get(12)[7].isEmpty()){
        Qim='p';
       }
       else{
        Qim=lenada.get(12)[7].charAt(0);
       }
       
       if(lenada.get(13)[7].isEmpty()){
        Qit='p';
       }
       else{
        Qit=lenada.get(13)[7].charAt(0);
       }

       if(lenada.get(14)[7].isEmpty()){
        Qin='p';
       }
       else{
        Qin=lenada.get(14)[7].charAt(0);
       }
       
       if(lenada.get(16)[7].isEmpty()){
        Sxm='p';
       }
       else{
        Sxm=lenada.get(16)[7].charAt(0);
       }
       
       if(lenada.get(17)[7].isEmpty()){
        Sxt='p';
       }
       else{
        Sxt=lenada.get(17)[7].charAt(0);
       }
       
       if(lenada.get(18)[7].isEmpty()){
        Sxn='p';
       }
       else{
        Sxn=lenada.get(18)[7].charAt(0);
       }
       
       if(lenada.get(19)[7].isEmpty()){
        Sam='p';
       }
       else{
        Sam=lenada.get(19)[7].charAt(0);
       }
       
       if(lenada.get(20)[7].isEmpty()){
        Sat='p';
       }
       else{
        Sat=lenada.get(20)[7].charAt(0);
       }
       
        


        
        FileWriter fw = new FileWriter(ProfessorNome[cont].getText()+".csv", false);
        BufferedWriter bw = new BufferedWriter (fw);
        PrintWriter pw = new PrintWriter (bw);
        
        pw.println(" , , , , , , , ");
        pw.println(ProfessorNome[cont].getText()+","+EmailNome[cont].getText()+","+RegimeNome[cont].getText()+","+SIAPENome[cont].getText());
        pw.println("MANHÃ,Segunda,Terça,Quarta,Quinta,Sexta,Sabado,DISP");
        pw.println("07:00-07:45,"+SemanaM2[cont].getValueAt(0, 0)+","+SemanaM2[cont].getValueAt(0, 1)+","+SemanaM2[cont].getValueAt(0, 2)+","+SemanaM2[cont].getValueAt(0, 3)+","+SemanaM2[cont].getValueAt(0, 4)+","+SemanaM2[cont].getValueAt(0, 5)+","+Sem);
        pw.println("07:45-08:30,"+SemanaM2[cont].getValueAt(1, 0)+","+SemanaM2[cont].getValueAt(1, 1)+","+SemanaM2[cont].getValueAt(1, 2)+","+SemanaM2[cont].getValueAt(1, 3)+","+SemanaM2[cont].getValueAt(1, 4)+","+SemanaM2[cont].getValueAt(1, 5)+","+Set);
        pw.println("08:30-09:15,"+SemanaM2[cont].getValueAt(2, 0)+","+SemanaM2[cont].getValueAt(2, 1)+","+SemanaM2[cont].getValueAt(2, 2)+","+SemanaM2[cont].getValueAt(2, 3)+","+SemanaM2[cont].getValueAt(2, 4)+","+SemanaM2[cont].getValueAt(2, 5)+","+Sen);
        pw.println("09:35-10:20,"+SemanaM2[cont].getValueAt(3, 0)+","+SemanaM2[cont].getValueAt(3, 1)+","+SemanaM2[cont].getValueAt(3, 2)+","+SemanaM2[cont].getValueAt(3, 3)+","+SemanaM2[cont].getValueAt(3, 4)+","+SemanaM2[cont].getValueAt(3, 5)+","+Tem);
        pw.println("10:20-11:05,"+SemanaM2[cont].getValueAt(4, 0)+","+SemanaM2[cont].getValueAt(4, 1)+","+SemanaM2[cont].getValueAt(4, 2)+","+SemanaM2[cont].getValueAt(4, 3)+","+SemanaM2[cont].getValueAt(4, 4)+","+SemanaM2[cont].getValueAt(4, 5)+","+Tet);
        pw.println("11:05-11:50,"+SemanaM2[cont].getValueAt(5, 0)+","+SemanaM2[cont].getValueAt(5, 1)+","+SemanaM2[cont].getValueAt(5, 2)+","+SemanaM2[cont].getValueAt(5, 3)+","+SemanaM2[cont].getValueAt(5, 4)+","+SemanaM2[cont].getValueAt(5, 5)+","+Ten);
        pw.println("TARDE");
        pw.println("12:50-13:35,"+SemanaT2[cont].getValueAt(0, 0)+","+SemanaT2[cont].getValueAt(0, 1)+","+SemanaT2[cont].getValueAt(0, 2)+","+SemanaT2[cont].getValueAt(0, 3)+","+SemanaT2[cont].getValueAt(0, 4)+","+SemanaT2[cont].getValueAt(0, 5)+","+Qam);
        pw.println("13:35-14:20,"+SemanaT2[cont].getValueAt(1, 0)+","+SemanaT2[cont].getValueAt(1, 1)+","+SemanaT2[cont].getValueAt(1, 2)+","+SemanaT2[cont].getValueAt(1, 3)+","+SemanaT2[cont].getValueAt(1, 4)+","+SemanaT2[cont].getValueAt(1, 5)+","+Qat);
        pw.println("14:20-15:05,"+SemanaT2[cont].getValueAt(2, 0)+","+SemanaT2[cont].getValueAt(2, 1)+","+SemanaT2[cont].getValueAt(2, 2)+","+SemanaT2[cont].getValueAt(2, 3)+","+SemanaT2[cont].getValueAt(2, 4)+","+SemanaT2[cont].getValueAt(2, 5)+","+Qan);
        pw.println("15:25-16:10,"+SemanaT2[cont].getValueAt(3, 0)+","+SemanaT2[cont].getValueAt(3, 1)+","+SemanaT2[cont].getValueAt(3, 2)+","+SemanaT2[cont].getValueAt(3, 3)+","+SemanaT2[cont].getValueAt(3, 4)+","+SemanaT2[cont].getValueAt(3, 5)+","+Qim);
        pw.println("16:10-16:55,"+SemanaT2[cont].getValueAt(4, 0)+","+SemanaT2[cont].getValueAt(4, 1)+","+SemanaT2[cont].getValueAt(4, 2)+","+SemanaT2[cont].getValueAt(4, 3)+","+SemanaT2[cont].getValueAt(4, 4)+","+SemanaT2[cont].getValueAt(4, 5)+","+Qit);
        pw.println("16:55-17:40,"+SemanaT2[cont].getValueAt(5, 0)+","+SemanaT2[cont].getValueAt(5, 1)+","+SemanaT2[cont].getValueAt(5, 2)+","+SemanaT2[cont].getValueAt(5, 3)+","+SemanaT2[cont].getValueAt(5, 4)+","+SemanaT2[cont].getValueAt(5, 5)+","+Qin);
        pw.println("NOITE");
        pw.println("18:30-19:15,"+SemanaN2[cont].getValueAt(0, 0)+","+SemanaN2[cont].getValueAt(0, 1)+","+SemanaN2[cont].getValueAt(0, 2)+","+SemanaN2[cont].getValueAt(0, 3)+","+SemanaN2[cont].getValueAt(0, 4)+","+SemanaN2[cont].getValueAt(0, 5)+","+Sxm);
        pw.println("19:15-20:00,"+SemanaN2[cont].getValueAt(1, 0)+","+SemanaN2[cont].getValueAt(1, 1)+","+SemanaN2[cont].getValueAt(1, 2)+","+SemanaN2[cont].getValueAt(1, 3)+","+SemanaN2[cont].getValueAt(1, 4)+","+SemanaN2[cont].getValueAt(1, 5)+","+Sxt);
        pw.println("20:00-20:45,"+SemanaN2[cont].getValueAt(2, 0)+","+SemanaN2[cont].getValueAt(2, 1)+","+SemanaN2[cont].getValueAt(2, 2)+","+SemanaN2[cont].getValueAt(2, 3)+","+SemanaN2[cont].getValueAt(2, 4)+","+SemanaN2[cont].getValueAt(2, 5)+","+Sxn);
        pw.println("20:45-21:30,"+SemanaN2[cont].getValueAt(3, 0)+","+SemanaN2[cont].getValueAt(3, 1)+","+SemanaN2[cont].getValueAt(3, 2)+","+SemanaN2[cont].getValueAt(3, 3)+","+SemanaN2[cont].getValueAt(3, 4)+","+SemanaN2[cont].getValueAt(3, 5)+","+Sam);
        pw.println("21:30-22:15,"+SemanaN2[cont].getValueAt(4, 0)+","+SemanaN2[cont].getValueAt(4, 1)+","+SemanaN2[cont].getValueAt(4, 2)+","+SemanaN2[cont].getValueAt(4, 3)+","+SemanaN2[cont].getValueAt(4, 4)+","+SemanaN2[cont].getValueAt(4, 5)+","+Sat);
        pw.flush();
        pw.close();
        ///////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
        
           
    }    
        //Nomeia variáveis 
        JPanel []Janela = new javax.swing.JPanel[i];
        JScrollPane []HorarioM = new javax.swing.JScrollPane[i];
        JTable []HorarioM2 = new javax.swing.JTable[i];
        JLabel []MANHA = new javax.swing.JLabel[i];
        JScrollPane []SemanaM = new javax.swing.JScrollPane[i];
        JTable []SemanaM2 = new javax.swing.JTable[i];
        JScrollPane []SemanaN = new javax.swing.JScrollPane[i];
        JTable []SemanaN2 = new javax.swing.JTable[i];
        JScrollPane []HorarioT = new javax.swing.JScrollPane[i];
        JTable []HorarioT2 = new javax.swing.JTable[i];
        JLabel []TARDE = new javax.swing.JLabel[i];
        JScrollPane []HorarioN = new javax.swing.JScrollPane[i];
        JTable []HorarioN2 = new javax.swing.JTable[i];
        JLabel []NOITE = new javax.swing.JLabel[i];
        JLabel []Professor = new javax.swing.JLabel[i];
        JTextField []DisciplinaNome = new javax.swing.JTextField[i];
        JLabel []Endereco = new javax.swing.JLabel[i];
        JTextField []EnderecoNome = new javax.swing.JTextField[i];
        JLabel []CEP = new javax.swing.JLabel[i];
        JTextField []CEPNome = new javax.swing.JTextField[i];
        JLabel []Telefone = new javax.swing.JLabel[i];
        JTextField []TelefoneNome = new javax.swing.JTextField[i];
        JLabel []EMail = new javax.swing.JLabel[i];
        JLabel []Regime = new javax.swing.JLabel[i];
        JTextField []RegimeNome = new javax.swing.JTextField[i];
        JLabel []Disciplinas = new javax.swing.JLabel[i];
        JLabel []SIAPE = new javax.swing.JLabel[i];
        JTextField []SIAPENome = new javax.swing.JTextField[i];
        JLabel []Aulas = new javax.swing.JLabel[i];
        JTextField []AulasNome = new javax.swing.JTextField[i];
        JLabel []SEMANO = new javax.swing.JLabel[i];
        JTextField []SEMANONome = new javax.swing.JTextField[i];
        JLabel []Outras = new javax.swing.JLabel[i];
        JTextField []OutrasNome = new javax.swing.JTextField[i];
        JScrollPane []Disponibilidade = new javax.swing.JScrollPane[i];
        JTable []Disponibilidade2 = new javax.swing.JTable[i];
        JScrollPane []SemanaT = new javax.swing.JScrollPane[i];
        JTable []SemanaT2 = new javax.swing.JTable[i];
        JTextField []ProfessorNome = new javax.swing.JTextField[i];
        JTextField []EmailNome = new javax.swing.JTextField[i];
        
        //Método para ler csv
       public void portinha() throws Exception{  
      JFileChooser fileChooser = new JFileChooser();
        File DirInicial= new File(".\\");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            fileChooser.setCurrentDirectory(DirInicial);
            int returnVal = fileChooser.showOpenDialog(null);
            if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION){
                java.io.File file = fileChooser.getSelectedFile( );
                Arquivo =file.getName();
        //////////////////////\\\\\\\\\\\\\\\\\\\\\\\\        
             }  
       CSVReader reader = new CSVReader(new FileReader(Arquivo), ',' , '"' , 1);
       java.util.List<String[]> letudo = reader.readAll();      
       // Garante a formação de n painéis
     
       
       char Sem;
       char Set;
       char Sen;
       char Tem;
       char Tet;
       char Ten;
       char Qam;
       char Qat;
       char Qan;
       char Qim;
       char Qit;
       char Qin;
       char Sxm;
       char Sxt;
       char Sxn;
       char Sam;
       char Sat;
           
       if(letudo.get(2)[7].isEmpty()){
        Sem='p';
       }
       else{
        Sem=letudo.get(2)[7].charAt(0);
       }
       
       if(letudo.get(3)[7].isEmpty()){
        Set='p';
       }
       else{
        Set=letudo.get(3)[7].charAt(0);
       }
       
       if(letudo.get(4)[7].isEmpty()){
        Sen='p';
       }
       else{
        Sen=letudo.get(4)[7].charAt(0);;
       }
       
       if(letudo.get(5)[7].isEmpty()){
        Tem='p';
       }
       else{
        Tem=letudo.get(5)[7].charAt(0);
       }
       
       if(letudo.get(6)[7].isEmpty()){
        Tet='p';
       }
       else{
        Tet=letudo.get(6)[7].charAt(0);
       }

       if(letudo.get(7)[7].isEmpty()){
        Ten='p';
       }
       else{
        Ten=letudo.get(7)[7].charAt(0);
       }

       if(letudo.get(9)[7].isEmpty()){
        Qam='p';
       }
       else{
        Qam=letudo.get(9)[7].charAt(0);
       }
       
       if(letudo.get(10)[7].isEmpty()){
        Qat='p';
       }
       else{
        Qat=letudo.get(10)[7].charAt(0);
       }

       if(letudo.get(11)[7].isEmpty()){
        Qan='p';
       }
       else{
        Qan=letudo.get(11)[7].charAt(0);
       }

       if(letudo.get(12)[7].isEmpty()){
        Qim='p';
       }
       else{
        Qim=letudo.get(12)[7].charAt(0);
       }
       
       if(letudo.get(13)[7].isEmpty()){
        Qit='p';
       }
       else{
        Qit=letudo.get(13)[7].charAt(0);
       }

       if(letudo.get(14)[7].isEmpty()){
        Qin='p';
       }
       else{
        Qin=letudo.get(14)[7].charAt(0);
       }
       
       if(letudo.get(16)[7].isEmpty()){
        Sxm='p';
       }
       else{
        Sxm=letudo.get(16)[7].charAt(0);
       }
       
       if(letudo.get(17)[7].isEmpty()){
        Sxt='p';
       }
       else{
        Sxt=letudo.get(17)[7].charAt(0);
       }
       
       if(letudo.get(18)[7].isEmpty()){
        Sxn='p';
       }
       else{
        Sxn=letudo.get(18)[7].charAt(0);
       }
       
       if(letudo.get(19)[7].isEmpty()){
        Sam='p';
       }
       else{
        Sam=letudo.get(19)[7].charAt(0);
       }
       
       if(letudo.get(20)[7].isEmpty()){
        Sat='p';
       }
       else{
        Sat=letudo.get(20)[7].charAt(0);
       }

       
        //Cria e setta os arrays
        Janela[x] = new javax.swing.JPanel();
        HorarioM[x] = new javax.swing.JScrollPane();
        HorarioM2[x] = new javax.swing.JTable();
        MANHA[x] = new javax.swing.JLabel();
        SemanaM[x] = new javax.swing.JScrollPane();
        
        //Setta uma cor específica para uma coluna dependendo da disponibilidade
        SemanaM2[x] = new javax.swing.JTable()
           { public Component prepareRenderer(TableCellRenderer rendererr, int roww, int columnn)
                {
                 Component componentt = super.prepareRenderer(rendererr,roww,columnn);
                 if(columnn == 0){
                     if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                     else if(Sem=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sem=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sem=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 1){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Tem=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Tem=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Tem=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 2){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qam=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qam=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qam=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 3){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qim=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qim=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qim=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 4){                     
                     if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                 else if(Sxm=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sxm=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sxm=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 5){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Sam=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sam=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sam=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 return componentt;

             }

         };;
        ///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
      
         SemanaN[x] = new javax.swing.JScrollPane();
        SemanaN2[x] = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer rendererr, int roww, int columnn)
                 {
                 Component componentt = super.prepareRenderer(rendererr,roww,columnn);
                     if(columnn == 0){
                                              if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                              else if(Sen=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sen=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sen=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 1){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Ten=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Ten=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Ten=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 2){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qan=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qan=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qan=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 3){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qin=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qin=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qin=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 4){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Sxn=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sxn=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sxn=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 5){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else {componentt.setBackground(Color.BLACK);
                                          
                                          }    
                 }

                 return componentt;

             }

         };;
        HorarioT[x] = new javax.swing.JScrollPane();
        HorarioT2[x] = new javax.swing.JTable();
        TARDE[x] = new javax.swing.JLabel();
        HorarioN[x] = new javax.swing.JScrollPane();
        HorarioN2[x] = new javax.swing.JTable();
        NOITE[x] = new javax.swing.JLabel();
        Professor[x] = new javax.swing.JLabel();
        DisciplinaNome[x] = new javax.swing.JTextField();      
        Endereco[x] = new javax.swing.JLabel();
        EnderecoNome[x] = new javax.swing.JTextField();      
        CEP[x] = new javax.swing.JLabel();
        CEPNome[x] = new javax.swing.JTextField();
        Telefone[x] = new javax.swing.JLabel();
        TelefoneNome[x] = new javax.swing.JTextField();
        EMail[x] = new javax.swing.JLabel();
        Regime[x] = new javax.swing.JLabel();
        RegimeNome[x] = new javax.swing.JTextField();
        Disciplinas[x] = new javax.swing.JLabel();
        SIAPE[x] = new javax.swing.JLabel();
        SIAPENome[x] = new javax.swing.JTextField();
        Aulas[x] = new javax.swing.JLabel();
        AulasNome[x] = new javax.swing.JTextField();
        SEMANO[x] = new javax.swing.JLabel();
        SEMANONome[x] = new javax.swing.JTextField();
        Outras[x] = new javax.swing.JLabel();
        OutrasNome[x] = new javax.swing.JTextField();
        Disponibilidade[x] = new javax.swing.JScrollPane();
        Disponibilidade2[x] = new javax.swing.JTable();
        SemanaT[x] = new javax.swing.JScrollPane();
        SemanaT2[x] = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer rendererr, int roww, int columnn)
                 {
                 Component componentt = super.prepareRenderer(rendererr,roww,columnn);
                 if(columnn == 0){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Set=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Set=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Set=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 1){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Tet=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Tet=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Tet=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 2){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qat=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qat=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qat=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 3){ 
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Qit=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Qit=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Qit=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }
                 if(columnn == 4){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Sxt=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sxt=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sxt=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 if(columnn == 5){
                                          if (Sem == 'p'){
                     componentt.setBackground(Color.pink);
                     }
                                          else if(Sat=='D'){
                     componentt.setBackground(Color.yellow);    
                     }
                     else if(Sat=='N'){
                     componentt.setBackground(Color.red);    
                     }
                     else if(Sat=='P'){
                     componentt.setBackground(Color.green);    
                     }
                 }

                 return componentt;

             }

         };;
        ProfessorNome[x] = new javax.swing.JTextField();
        EmailNome[x] = new javax.swing.JTextField();   
        
        
       
     
        HorarioM2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"07:00-07:45"},
                {"07:45-08:30"},
                {"08:30-09:15"},
                {"09:35-10:20"},
                {"10:20-11:05"},
                {"11:05-11:50"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        HorarioM[x].setViewportView(HorarioM2[x]);
        if (HorarioM2[x].getColumnModel().getColumnCount() > 0) {
            HorarioM2[x].getColumnModel().getColumn(0).setResizable(false);
        }

        MANHA[x].setFont(new java.awt.Font("Tahoma", 1, 12)); 
        MANHA[x].setText("MANHÃ");

        SemanaM2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {letudo.get(2)[1], letudo.get(2)[2], letudo.get(2)[3], letudo.get(2)[4], letudo.get(2)[5], letudo.get(2)[6]},
                {letudo.get(3)[1], letudo.get(3)[2], letudo.get(3)[3], letudo.get(3)[4], letudo.get(3)[5], letudo.get(3)[6]},
                {letudo.get(4)[1], letudo.get(4)[2], letudo.get(4)[3], letudo.get(4)[4], letudo.get(4)[5], letudo.get(4)[6]},
                {letudo.get(5)[1], letudo.get(5)[2], letudo.get(5)[3], letudo.get(5)[4], letudo.get(5)[5], letudo.get(5)[6]},
                {letudo.get(6)[1], letudo.get(6)[2], letudo.get(6)[3], letudo.get(6)[4], letudo.get(6)[5], letudo.get(6)[6]},
                {letudo.get(7)[1], letudo.get(7)[2], letudo.get(7)[3], letudo.get(7)[4], letudo.get(7)[5], letudo.get(7)[6]}
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ));
        SemanaM[x].setViewportView(SemanaM2[x]);
        if (SemanaM2[x].getColumnModel().getColumnCount() > 0) {
            SemanaM2[x].getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaM2[x].getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaM2[x].getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaM2[x].getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaM2[x].getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaM2[x].getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        SemanaN2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {letudo.get(16)[1], letudo.get(16)[2], letudo.get(16)[3], letudo.get(16)[4], letudo.get(16)[5], letudo.get(16)[6]},
                {letudo.get(17)[1], letudo.get(17)[2], letudo.get(17)[3], letudo.get(17)[4], letudo.get(17)[5], letudo.get(17)[6]},
                {letudo.get(18)[1], letudo.get(18)[2], letudo.get(18)[3], letudo.get(18)[4], letudo.get(18)[5], letudo.get(18)[6]},
                {letudo.get(19)[1], letudo.get(19)[2], letudo.get(19)[3], letudo.get(19)[4], letudo.get(19)[5], letudo.get(19)[6]},
                {letudo.get(20)[1], letudo.get(20)[2], letudo.get(20)[3], letudo.get(20)[4], letudo.get(20)[5], letudo.get(20)[6]},               
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ));
        SemanaN[x].setViewportView(SemanaN2[x]);
        if (SemanaN2[x].getColumnModel().getColumnCount() > 0) {
            SemanaN2[x].getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaN2[x].getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaN2[x].getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaN2[x].getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaN2[x].getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaN2[x].getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        HorarioT2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12:50-13:35"},
                {"13:35-14:20"},
                {"14:20-15:05"},
                {"15:25-16:10"},
                {"16:10-16:55"},
                {"16:55-17:40"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        HorarioT[x].setViewportView(HorarioT2[x]);
        if (HorarioT2[x].getColumnModel().getColumnCount() > 0) {
            HorarioT2[x].getColumnModel().getColumn(0).setResizable(false);
        }

        TARDE[x].setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TARDE[x].setText("TARDE");

        HorarioN2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"18:30-19:15"},
                {"19:15-20:00"},
                {"20:00-20:45"},
                {"20:45-21:30"},
                {"21:30-22:15"}
            },
            new String [] {
                "HORÁRIO"
            }
        ));
        HorarioN[x].setViewportView(HorarioN2[x]);
        if (HorarioN2[x].getColumnModel().getColumnCount() > 0) {
            HorarioN2[x].getColumnModel().getColumn(0).setResizable(false);
        }

        NOITE[x].setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        NOITE[x].setText("NOITE");

        Professor[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Professor[x].setText("Professor:");

        Endereco[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Endereco[x].setText("Endereço:");

        CEP[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CEP[x].setText("CEP:");

        Telefone[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Telefone[x].setText("Telefone:");

        EMail[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EMail[x].setText("E-MAIL");

        Regime[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Regime[x].setText("Regime TRAB:");

        Disciplinas[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Disciplinas[x].setText("Disciplinas:");

        SIAPE[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SIAPE[x].setText("Nº SIAPE:");

        Aulas[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Aulas[x].setText("Aulas:");

        SEMANO[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SEMANO[x].setText("SEM/ANO:");

        Outras[x].setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Outras[x].setText("Outras:");

        Disponibilidade2[x].setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Disponibilidade2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Verde", "Preferência"},
                {"Amarelo", "Disponível"},
                {"Vermelho", "Não disponível"}
            },
            new String [] {
                "DISPONIBILIDADE", ""
            }
        ) {
            boolean[] canEdit2 = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit2 [columnIndex];
            }
        });
        Disponibilidade[x].setViewportView(Disponibilidade2[x]);
        if (Disponibilidade2[x].getColumnModel().getColumnCount() > 0) {
            Disponibilidade2[x].getColumnModel().getColumn(0).setResizable(false);
            Disponibilidade2[x].getColumnModel().getColumn(1).setResizable(false);
        }

        SemanaT2[x].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {letudo.get(9)[1], letudo.get(9)[2], letudo.get(9)[3], letudo.get(9)[4], letudo.get(9)[5], letudo.get(9)[6]},
                {letudo.get(10)[1], letudo.get(10)[2], letudo.get(10)[3], letudo.get(10)[4], letudo.get(10)[5], letudo.get(10)[6]},
                {letudo.get(11)[1], letudo.get(11)[2], letudo.get(11)[3], letudo.get(11)[4], letudo.get(11)[5], letudo.get(11)[6]},
                {letudo.get(12)[1], letudo.get(12)[2], letudo.get(12)[3], letudo.get(12)[4], letudo.get(12)[5], letudo.get(12)[6]},
                {letudo.get(13)[1], letudo.get(13)[2], letudo.get(13)[3], letudo.get(13)[4], letudo.get(13)[5], letudo.get(13)[6]},
                {letudo.get(14)[1], letudo.get(14)[2], letudo.get(14)[3], letudo.get(14)[4], letudo.get(14)[5], letudo.get(14)[6]}
            },
            new String [] {
                "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado"
            }
        ));
        SemanaT[x].setViewportView(SemanaT2[x]);
        if (SemanaT2[x].getColumnModel().getColumnCount() > 0) {
            SemanaT2[x].getColumnModel().getColumn(0).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaT2[x].getColumnModel().getColumn(1).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaT2[x].getColumnModel().getColumn(2).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaT2[x].getColumnModel().getColumn(3).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaT2[x].getColumnModel().getColumn(4).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
            SemanaT2[x].getColumnModel().getColumn(5).setCellEditor(new javax.swing.DefaultCellEditor(Matérias));
        }

        javax.swing.GroupLayout JanelaLayout = new javax.swing.GroupLayout(Janela[x]);
        Janela[x].setLayout(JanelaLayout);
        JanelaLayout.setHorizontalGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaLayout.createSequentialGroup()
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JanelaLayout.createSequentialGroup()
                                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JanelaLayout.createSequentialGroup()
                                        .addComponent(Disciplinas[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DisciplinaNome[x]))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JanelaLayout.createSequentialGroup()
                                        .addComponent(Telefone[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TelefoneNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EMail[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EmailNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Regime[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RegimeNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(JanelaLayout.createSequentialGroup()
                                        .addComponent(SIAPE[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SIAPENome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SEMANO[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SEMANONome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(JanelaLayout.createSequentialGroup()
                                        .addComponent(Aulas[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AulasNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Outras[x])
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(OutrasNome[x]))))
                            .addGroup(JanelaLayout.createSequentialGroup()
                                .addComponent(Professor[x])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProfessorNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Endereco[x])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EnderecoNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CEP[x])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CEPNome[x])))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Disponibilidade[x], javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addGroup(JanelaLayout.createSequentialGroup()
                        .addComponent(HorarioN[x], javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JanelaLayout.createSequentialGroup()
                                .addComponent(NOITE[x], javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(1068, Short.MAX_VALUE))
                            .addComponent(SemanaN[x])))
                    .addGroup(JanelaLayout.createSequentialGroup()
                        .addComponent(HorarioM[x], javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JanelaLayout.createSequentialGroup()
                                .addComponent(MANHA[x], javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(1068, Short.MAX_VALUE))
                            .addComponent(SemanaM[x])))
                    .addGroup(JanelaLayout.createSequentialGroup()
                        .addComponent(HorarioT[x], javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JanelaLayout.createSequentialGroup()
                                .addComponent(TARDE[x], javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(1068, Short.MAX_VALUE))
                            .addComponent(SemanaT[x])))))
        );
        JanelaLayout.setVerticalGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaLayout.createSequentialGroup()
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Professor[x])
                            .addComponent(Endereco[x])
                            .addComponent(EnderecoNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CEP[x])
                            .addComponent(CEPNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProfessorNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Telefone[x])
                            .addComponent(TelefoneNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EMail[x])
                            .addComponent(Regime[x])
                            .addComponent(RegimeNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SIAPE[x])
                            .addComponent(SIAPENome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SEMANO[x])
                            .addComponent(SEMANONome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Aulas[x])
                            .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AulasNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Outras[x])
                                .addComponent(OutrasNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Disciplinas[x])
                                .addComponent(DisciplinaNome[x], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(Disponibilidade[x], javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(MANHA[x], javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HorarioM[x], javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(SemanaM[x], javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TARDE[x], javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HorarioT[x], javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SemanaT[x], javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(NOITE[x], javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JanelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HorarioN[x], javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(SemanaN[x], javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
                
        macarrone.addTab(letudo.get(0)[0], Janela[x]);
        ProfessorNome[x].setText(letudo.get(0)[0]);
        EmailNome[x].setText(letudo.get(0)[1]);  
        RegimeNome[x].setText(letudo.get(0)[2]);
        SIAPENome[x].setText(letudo.get(0)[3]); 
       }
      }
